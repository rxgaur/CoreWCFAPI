//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFClientNETFramwork.ProductService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/standardlib")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Brand {
            get {
                return this.BrandField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandField, value) != true)) {
                    this.BrandField = value;
                    this.RaisePropertyChanged("Brand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductService.IProductsServiceSoap")]
    public interface IProductsServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsServiceSoap/GetProducts", ReplyAction="http://tempuri.org/IProductsServiceSoap/GetProductsResponse")]
        WCFClientNETFramwork.ProductService.Product[] GetProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsServiceSoap/GetProducts", ReplyAction="http://tempuri.org/IProductsServiceSoap/GetProductsResponse")]
        System.Threading.Tasks.Task<WCFClientNETFramwork.ProductService.Product[]> GetProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsServiceSoap/AddProduct", ReplyAction="http://tempuri.org/IProductsServiceSoap/AddProductResponse")]
        WCFClientNETFramwork.ProductService.Product AddProduct(WCFClientNETFramwork.ProductService.Product productItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsServiceSoap/AddProduct", ReplyAction="http://tempuri.org/IProductsServiceSoap/AddProductResponse")]
        System.Threading.Tasks.Task<WCFClientNETFramwork.ProductService.Product> AddProductAsync(WCFClientNETFramwork.ProductService.Product productItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsServiceSoap/UpdateProduct", ReplyAction="http://tempuri.org/IProductsServiceSoap/UpdateProductResponse")]
        WCFClientNETFramwork.ProductService.Product UpdateProduct(int id, WCFClientNETFramwork.ProductService.Product productItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsServiceSoap/UpdateProduct", ReplyAction="http://tempuri.org/IProductsServiceSoap/UpdateProductResponse")]
        System.Threading.Tasks.Task<WCFClientNETFramwork.ProductService.Product> UpdateProductAsync(int id, WCFClientNETFramwork.ProductService.Product productItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsServiceSoap/DeleteProduct", ReplyAction="http://tempuri.org/IProductsServiceSoap/DeleteProductResponse")]
        int DeleteProduct(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsServiceSoap/DeleteProduct", ReplyAction="http://tempuri.org/IProductsServiceSoap/DeleteProductResponse")]
        System.Threading.Tasks.Task<int> DeleteProductAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductsServiceSoapChannel : WCFClientNETFramwork.ProductService.IProductsServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductsServiceSoapClient : System.ServiceModel.ClientBase<WCFClientNETFramwork.ProductService.IProductsServiceSoap>, WCFClientNETFramwork.ProductService.IProductsServiceSoap {
        
        public ProductsServiceSoapClient() {
        }
        
        public ProductsServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductsServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductsServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductsServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCFClientNETFramwork.ProductService.Product[] GetProducts() {
            return base.Channel.GetProducts();
        }
        
        public System.Threading.Tasks.Task<WCFClientNETFramwork.ProductService.Product[]> GetProductsAsync() {
            return base.Channel.GetProductsAsync();
        }
        
        public WCFClientNETFramwork.ProductService.Product AddProduct(WCFClientNETFramwork.ProductService.Product productItem) {
            return base.Channel.AddProduct(productItem);
        }
        
        public System.Threading.Tasks.Task<WCFClientNETFramwork.ProductService.Product> AddProductAsync(WCFClientNETFramwork.ProductService.Product productItem) {
            return base.Channel.AddProductAsync(productItem);
        }
        
        public WCFClientNETFramwork.ProductService.Product UpdateProduct(int id, WCFClientNETFramwork.ProductService.Product productItem) {
            return base.Channel.UpdateProduct(id, productItem);
        }
        
        public System.Threading.Tasks.Task<WCFClientNETFramwork.ProductService.Product> UpdateProductAsync(int id, WCFClientNETFramwork.ProductService.Product productItem) {
            return base.Channel.UpdateProductAsync(id, productItem);
        }
        
        public int DeleteProduct(int id) {
            return base.Channel.DeleteProduct(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteProductAsync(int id) {
            return base.Channel.DeleteProductAsync(id);
        }
    }
}
